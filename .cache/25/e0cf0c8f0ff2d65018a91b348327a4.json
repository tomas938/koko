{"id":"js/shaders/fragment.glsl","dependencies":[{"name":"C:\\Users\\Matrix\\Desktop\\3d-stuff-master\\package.json","includedInParent":true,"mtime":1645130943428}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\nvarying float vNoise;\\nvarying vec2 vUv;\\nuniform sampler2D uImage;\\nuniform float time;\\nuniform float hoverState;\\n\\nvoid main() {\\n    // vec3 color1 = vec3(1.,0.,0.);      \\n    // vec3 color2 = vec3(1.,1.,1.);      \\n    // vec3 finalColor = mix(color1,color2,0.5*(vNoise + 1.));      \\n\\n    vec2 newUV = vUv;\\n\\n    \\tvec2 p = newUV;\\n\\t\\t\\tfloat x = hoverState;\\n\\t\\t\\tx = smoothstep(.0,1.0,(x*2.0+p.y-1.0));\\n\\t\\t\\tvec4 f = mix(\\n\\t\\t\\t\\ttexture2D(uImage, (p-.5)*(1.-x)+.5), \\n\\t\\t\\t\\ttexture2D(uImage, (p-.5)*x+.5), \\n\\t\\t\\t\\tx);\\n\\n    // newUV = vec2(newUV.x , newUV.y + 0.01*sin(newUV.x*10. + time / 100.  ));\\n\\n    vec4 bgView = texture2D(uImage,newUV);\\n\\n    // gl_FragColor = vec4(finalColor,1.);\\n    // gl_FragColor = vec4(vUv,0.,1.);\\n    // gl_FragColor = bgView + 0.5*vec4(vNoise);\\n    // gl_FragColor = vec4(vNoise,0.,0.,1.);\\n    gl_FragColor = f;\\n    gl_FragColor.rgb += 0.01*vec3(vNoise);\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"js/shaders/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"js/shaders/fragment.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"js/shaders/fragment.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"js/shaders/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"js/shaders/fragment.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":958},"source":"js/shaders/fragment.glsl","original":{"line":1,"column":0}}],"sources":{"js/shaders/fragment.glsl":"module.exports=\"#define GLSLIFY 1\\nvarying float vNoise;\\nvarying vec2 vUv;\\nuniform sampler2D uImage;\\nuniform float time;\\nuniform float hoverState;\\n\\nvoid main() {\\n    // vec3 color1 = vec3(1.,0.,0.);      \\n    // vec3 color2 = vec3(1.,1.,1.);      \\n    // vec3 finalColor = mix(color1,color2,0.5*(vNoise + 1.));      \\n\\n    vec2 newUV = vUv;\\n\\n    \\tvec2 p = newUV;\\n\\t\\t\\tfloat x = hoverState;\\n\\t\\t\\tx = smoothstep(.0,1.0,(x*2.0+p.y-1.0));\\n\\t\\t\\tvec4 f = mix(\\n\\t\\t\\t\\ttexture2D(uImage, (p-.5)*(1.-x)+.5), \\n\\t\\t\\t\\ttexture2D(uImage, (p-.5)*x+.5), \\n\\t\\t\\t\\tx);\\n\\n    // newUV = vec2(newUV.x , newUV.y + 0.01*sin(newUV.x*10. + time / 100.  ));\\n\\n    vec4 bgView = texture2D(uImage,newUV);\\n\\n    // gl_FragColor = vec4(finalColor,1.);\\n    // gl_FragColor = vec4(vUv,0.,1.);\\n    // gl_FragColor = bgView + 0.5*vec4(vNoise);\\n    // gl_FragColor = vec4(vNoise,0.,0.,1.);\\n    gl_FragColor = f;\\n    gl_FragColor.rgb += 0.01*vec3(vNoise);\\n}\";"},"lineCount":null}},"error":null,"hash":"3e1169203d0bb3a60fe92d98909733fe","cacheData":{"env":{}}}